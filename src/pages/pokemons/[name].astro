---
import type { PokemonListResponse } from '@interfaces/pokemon-list';
import type { GetStaticPaths } from 'astro';

import { Icon } from 'astro-icon/components'

import PokemonCard from '../../components/pokemons/PokemonCard.astro';
import MainLayout from '@layouts/MainLayout.astro';
import Title from '@components/shared/Title.astro';


export const getStaticPaths = (async () => {
  const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
  const { results } = (await resp.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: { name: name },
    props: { name: name, url: url },
  }));

}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title={`Pokémon - #${id} ${name}`}
  description={`Información sobre el pokémon ${name}`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
      <div class="flex flex-row"> 
        <div>
          <button class="bg-red-500 hover:bg-yellow-500 px-4 py-1 rounded-md" onclick="history.back()">
              <span class="text-white font-semibold">Regresar</span>
            </button>
            <Title>{name}</Title>
        </div>

          <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
            <Icon data-outline name='heart-outline' size={50}/>
            <Icon data-full class='hidden' name='heart-full' size={50}/>
          </button>

      </div>
      
    <PokemonCard name={name} url={url} isBig />

    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
  </section>
</MainLayout>


<script>
  import type { FavoritePokemon } from "@interfaces/favorite-pokemon";
  
  // interface FavoritePokemon{
  //   name: string,
  //   id: number
  // }


  // document.addEventListener('astro:before-preparation' , () => {
  //   console.log('astro:before-preparation')

  // })

  // document.addEventListener('astro:after-preparation', () =>{
  //   console.log('astro:after-preparation')
  // })

  // document.addEventListener("astro:after-swap", () => {
  //   console.log("astro:after-swap")
  // })

  // document.addEventListener("astro:before-swap", () => {
  //   console.log("astro:before-swap")
  // })

  // document.addEventListener('astro:page-load', () => {
  //   console.log('hola')
  // }, {once: true})


  const handleLoadPage = () => {

    let favoritePokemons: FavoritePokemon[] = JSON.parse(
      localStorage.getItem('favorites') ?? '[]'
    )

    const btnFavorite = document.querySelector('#btn-favorite') as HTMLButtonElement
  
    if (!btnFavorite) return
  
    // Referencias
    const name = btnFavorite.dataset.name ?? '';
    const id = btnFavorite.dataset.id ?? '';
    const isFavorite = favoritePokemons.some((fav) => fav.name === name)

    const heartOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement
    const heartfull = btnFavorite.querySelector('[data-full]') as HTMLElement


    // Funcion para mostrar o ocultar el corazon lleno

    if (isFavorite) {
      heartOutline.classList.add('hidden')
      heartfull.classList.remove('hidden')
    }

    const toggleFavorite = () => {
      const isFavorite = favoritePokemons.some((fav) => fav.name === name)

      if(isFavorite){
        //remover el pokemon
        favoritePokemons = favoritePokemons.filter((fav) => fav.name === name)
      }else{
        //agregar
        favoritePokemons.push(
        {
          id: +id,
          name: name,
        }
    )}
    localStorage.setItem('favorites', JSON.stringify(favoritePokemons))
  }

    btnFavorite.addEventListener('click', () => {
      
      heartOutline.classList.toggle('hidden')
      heartfull.classList.toggle('hidden')

      toggleFavorite()
    })
  }

  document.addEventListener('astro:page-load', handleLoadPage)





</script>

<style>
  a {
    @apply hover:underline text-blue-500;
  }

  #btn-favorite {
    @apply hover:animate-pulse
  }
</style>